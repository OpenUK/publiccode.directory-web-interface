{"version":3,"file":"index.js","sources":["../../src/MockStorage.ts","../../src/SimplePromiseQueue.ts","../../src/index.ts"],"sourcesContent":["/**\n * Created by championswimmer on 22/07/17.\n */\nexport default class MockStorage implements Storage {\n  [index: number]: string;\n  [key: string]: any;\n\n  public get length(): number {\n    return Object.keys(this).length\n  }\n\n  public key(index: number): string | any {\n    return Object.keys(this)[index]\n  }\n\n  public setItem(key: string, data: any): void {\n    this[key] = data.toString()\n  }\n  public getItem(key: string): string {\n    return this[key]\n  }\n  public removeItem(key: string): void {\n    delete this[key]\n  }\n  public clear(): void {\n    for (const key of Object.keys(this)) {\n      delete this[key]\n    }\n  }\n}\n","// tslint:disable: variable-name\nexport default class SimplePromiseQueue {\n  private readonly _queue: Array<Promise<void>> = []\n  private _flushing = false\n\n  public enqueue(promise: Promise<void>) {\n    this._queue.push(promise)\n    if (!this._flushing) { return this.flushQueue() }\n    return Promise.resolve()\n  }\n\n  private flushQueue() {\n    this._flushing = true\n\n    const chain = (): Promise<void> | void => {\n      const nextTask = this._queue.shift()\n      if (nextTask) {\n        return nextTask.then(chain)\n      } else {\n        this._flushing = false\n      }\n    }\n    return Promise.resolve(chain())\n  }\n}\n","/**\n * Created by championswimmer on 18/07/17.\n */\nimport merge from 'lodash.merge'\nimport {Mutation, MutationPayload, Payload, Plugin, Store} from 'vuex'\nimport {AsyncStorage} from './AsyncStorage'\nimport MockStorage from './MockStorage'\nimport {PersistOptions} from './PersistOptions'\nimport SimplePromiseQueue from './SimplePromiseQueue'\n\nlet CircularJSON = JSON\n/**\n * A class that implements the vuex persistence.\n */\nexport class VuexPersistence<S, P extends Payload> implements PersistOptions<S> {\n  public asyncStorage: boolean\n  public storage: Storage | AsyncStorage\n  public restoreState: (key: string, storage?: AsyncStorage | Storage) => Promise<S> | S\n  public saveState: (key: string, state: {}, storage?: AsyncStorage | Storage) => Promise<void> | void\n  public reducer: (state: S) => {}\n  public key: string\n  public filter: (mutation: Payload) => boolean\n  public modules: string[]\n  public strictMode: boolean\n  public supportCircular: boolean\n\n  /**\n   * The plugin function that can be used inside a vuex store.\n   */\n  public plugin: Plugin<S>\n  /**\n   * A mutation that can be used to restore state\n   * Helpful if we are running in strict mode\n   */\n  public RESTORE_MUTATION: Mutation<S>\n  public subscribed: boolean\n\n  // tslint:disable-next-line:variable-name\n  private _mutex = new SimplePromiseQueue()\n\n  /**\n   * Create a {@link VuexPersistence} object.\n   * Use the <code>plugin</code> function of this class as a\n   * Vuex plugin.\n   * @param {PersistOptions} options\n   */\n  public constructor(options: PersistOptions<S>) {\n    this.key = ((options.key != null) ? options.key : 'vuex')\n\n    this.subscribed = false\n    this.supportCircular = options.supportCircular || false\n    if (this.supportCircular) {\n      CircularJSON = require('circular-json')\n    }\n\n    this.storage =\n      ((options.storage != null)\n        ? options.storage\n        : (typeof window === 'undefined')\n          ? (new MockStorage())\n          : window.localStorage\n      )\n\n    /**\n     * How this works is -\n     *  1. If there is options.reducer function, we use that, if not;\n     *  2. We check options.modules;\n     *    1. If there is no options.modules array, we use entire state in reducer\n     *    2. Otherwise, we create a reducer that merges all those state modules that are\n     *        defined in the options.modules[] array\n     * @type {((state: S) => {}) | ((state: S) => S) | ((state: any) => {})}\n     */\n    this.reducer = (\n      (options.reducer != null)\n        ? options.reducer\n        : (\n          (options.modules == null)\n            ? ((state: S) => state)\n            : (\n              (state: any) =>\n                (options.modules as string[]).reduce((a, i) =>\n                  merge(a, { [i]: state[i] }), {})\n            )\n        )\n    )\n\n    this.filter = (\n      (options.filter != null)\n        ? options.filter\n        : ((mutation) => true)\n    )\n\n    this.strictMode = options.strictMode || false\n\n    this.RESTORE_MUTATION = function RESTORE_MUTATION(state: S, savedState: any) {\n      const mergedState = merge({}, state, savedState)\n      for (const propertyName of Object.keys(mergedState)) {\n        (this as any)._vm.$set(state, propertyName, mergedState[propertyName])\n      }\n    }\n\n    this.asyncStorage = options.asyncStorage || false\n    const storageConfig = this.storage && ((this.storage) as any)._config\n    this.asyncStorage = this.asyncStorage || (storageConfig && storageConfig.name) === 'localforage'\n\n    if (this.asyncStorage) {\n\n      /**\n       * Async {@link #VuexPersistence.restoreState} implementation\n       * @type {((key: string, storage?: Storage) =>\n       *      (Promise<S> | S)) | ((key: string, storage: AsyncStorage) => Promise<any>)}\n       */\n      this.restoreState = (\n        (options.restoreState != null)\n          ? options.restoreState\n          : ((key: string, storage: AsyncStorage) =>\n              (storage ).getItem(key)\n                .then((value) =>\n                  typeof value === 'string' // If string, parse, or else, just return\n                    ? (\n                      this.supportCircular\n                        ? CircularJSON.parse(value || '{}')\n                        : JSON.parse(value || '{}')\n                    )\n                    : (value || {})\n                )\n          )\n      )\n\n      /**\n       * Async {@link #VuexPersistence.saveState} implementation\n       * @type {((key: string, state: {}, storage?: Storage) =>\n       *    (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\n       */\n      this.saveState = (\n        (options.saveState != null)\n          ? options.saveState\n          : ((key: string, state: {}, storage: AsyncStorage) =>\n              (storage).setItem(\n                key, // Second argument is state _object_ if localforage, stringified otherwise\n                (((storage && storage._config && storage._config.name) === 'localforage')\n                  ? merge({}, state)\n                  : (\n                      this.supportCircular\n                        ? CircularJSON.stringify(state) as any\n                        : JSON.stringify(state) as any\n                    )\n                )\n              )\n          )\n      )\n\n      /**\n       * Async version of plugin\n       * @param {Store<S>} store\n       */\n      this.plugin = (store: Store<S>) => {\n        ((this.restoreState(this.key, this.storage)) as Promise<S>).then((savedState) => {\n          /**\n           * If in strict mode, do only via mutation\n           */\n          if (this.strictMode) {\n            store.commit('RESTORE_MUTATION', savedState)\n          } else {\n            store.replaceState(merge(store.state, savedState))\n          }\n\n          this.subscriber(store)((mutation: MutationPayload, state: S) => {\n            if (this.filter(mutation)) {\n              this._mutex.enqueue(\n                this.saveState(this.key, this.reducer(state), this.storage) as Promise<void>\n              )\n            }\n          })\n          this.subscribed = true\n        })\n      }\n    } else {\n\n      /**\n       * Sync {@link #VuexPersistence.restoreState} implementation\n       * @type {((key: string, storage?: Storage) =>\n       *    (Promise<S> | S)) | ((key: string, storage: Storage) => (any | string | {}))}\n       */\n      this.restoreState = (\n        (options.restoreState != null)\n          ? options.restoreState\n          : ((key: string, storage: Storage) => {\n             const value = (storage).getItem(key)\n             if (typeof value === 'string') {// If string, parse, or else, just return\n                return (\n                  this.supportCircular\n                    ? CircularJSON.parse(value || '{}')\n                    : JSON.parse(value || '{}')\n                )\n             } else {\n               return (value || {})\n             }\n          })\n      )\n\n      /**\n       * Sync {@link #VuexPersistence.saveState} implementation\n       * @type {((key: string, state: {}, storage?: Storage) =>\n       *     (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\n       */\n      this.saveState = (\n        (options.saveState != null)\n          ? options.saveState\n          : ((key: string, state: {}, storage: Storage) =>\n              (storage).setItem(\n                key, // Second argument is state _object_ if localforage, stringified otherwise\n                (\n                  this.supportCircular\n                    ? CircularJSON.stringify(state) as any\n                    : JSON.stringify(state) as any\n                )\n              )\n          )\n      )\n\n      /**\n       * Sync version of plugin\n       * @param {Store<S>} store\n       */\n      this.plugin = (store: Store<S>) => {\n        const savedState = this.restoreState(this.key, this.storage) as S\n\n        if (this.strictMode) {\n          store.commit('RESTORE_MUTATION', savedState)\n        } else {\n          store.replaceState(merge(store.state, savedState))\n        }\n\n        this.subscriber(store)((mutation: MutationPayload, state: S) => {\n          if (this.filter(mutation)) {\n            this.saveState(this.key, this.reducer(state), this.storage)\n          }\n        })\n\n        this.subscribed = true\n      }\n    }\n  }\n\n  /**\n   * Creates a subscriber on the store. automatically is used\n   * when this is used a vuex plugin. Not for manual usage.\n   * @param store\n   */\n  private subscriber = (store: Store<S>) =>\n    (handler: (mutation: MutationPayload, state: S) => any) => store.subscribe(handler)\n}\n\nexport {\n  MockStorage, AsyncStorage, PersistOptions\n}\n\nexport default VuexPersistence\n"],"names":[],"mappings":"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"}